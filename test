import pandas as pd
import numpy as np
import collections
import plotly.graph_objects as go
from plotly.colors import n_colors

volleystat = pd.read_csv('volleyball_dataset_2016_2020.csv')

def GetStatGuest(home, guest):
    matchesguest = 0 
    matchesguesttotal = 0
    
    set4guest = 0
    set5guest = 0
    set4guest2 = 0
    set5guest2 = 0
    
    guestWinguest = 0
    guestWinguest2 = 0
    set1guestWin = 0
    set2guestWin = 0
    set3guestWin = 0
    set4guestWin = 0
    set5guestWin = 0
    set1guestWinguest = 0
    set2guestWinguest = 0
    set3guestWinguest = 0
    set4guestWinguest = 0
    set5guestWinguest = 0
    
    total40B_1 = 0
    total41B_1 = 0
    total42B_1 = 0
    total43B_1 = 0
    total44B_1 = 0
    total45B_1 = 0
    total46B_1 = 0
    total47B_1 = 0
    total48B_1 = 0
    
    total40B_2 = 0
    total41B_2 = 0
    total42B_2 = 0
    total43B_2 = 0
    total44B_2 = 0
    total45B_2 = 0
    total46B_2 = 0
    total47B_2 = 0
    total48B_2 = 0

    total40B_3 = 0
    total41B_3 = 0
    total42B_3 = 0
    total43B_3 = 0
    total44B_3 = 0
    total45B_3 = 0
    total46B_3 = 0
    total47B_3 = 0
    total48B_3 = 0

    total40B_4 = 0
    total41B_4 = 0
    total42B_4 = 0
    total43B_4 = 0
    total44B_4 = 0
    total45B_4 = 0
    total46B_4 = 0
    total47B_4 = 0
    total48B_4 = 0
    
    total20B_5 = 0
    total21B_5 = 0
    total22B_5 = 0
    total23B_5 = 0
    total24B_5 = 0
    total25B_5 = 0
    total26B_5 = 0
    total27B_5 = 0
    total28B_5 = 0
    
    total40M_1 = 0
    total41M_1 = 0
    total42M_1 = 0
    total43M_1 = 0
    total44M_1 = 0
    total45M_1 = 0
    total46M_1 = 0
    total47M_1 = 0
    total48M_1 = 0
    
    total40M_2 = 0
    total41M_2 = 0
    total42M_2 = 0
    total43M_2 = 0
    total44M_2 = 0
    total45M_2 = 0
    total46M_2 = 0
    total47M_2 = 0
    total48M_2 = 0

    total40M_3 = 0
    total41M_3 = 0
    total42M_3 = 0
    total43M_3 = 0
    total44M_3 = 0
    total45M_3 = 0
    total46M_3 = 0
    total47M_3 = 0
    total48M_3 = 0

    total40M_4 = 0
    total41M_4 = 0
    total42M_4 = 0
    total43M_4 = 0
    total44M_4 = 0
    total45M_4 = 0
    total46M_4 = 0
    total47M_4 = 0
    total48M_4 = 0
    
    total20M_5 = 0
    total21M_5 = 0
    total22M_5 = 0
    total23M_5 = 0
    total24M_5 = 0
    total25M_5 = 0
    total26M_5 = 0
    total27M_5 = 0
    total28M_5 = 0
    
    
    
    vs1drop = volleystat[((volleystat.hometeam == guest) | (volleystat.guestteam == guest))].tail(50)
    vs1 = vs1drop.reset_index(drop=True)
    
    
    for i in range(len(vs1)):
        if ((vs1['hometeam'][i] == guest) or (vs1['guestteam'][i] == guest)):
            matchesguest += 1
            title = (f"{guest}: last {matchesguest}")
        if (((vs1['hometeam'][i] == guest) and (vs1['home_total'][i]) > (vs1['guest_total'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['home_total'][i]) < (vs1['guest_total'][i]))): 
            guestWinguest += 1
        if(vs1['guestteam'][i] == guest): 
            matchesguesttotal += 1
        if((vs1['guestteam'][i] == guest) and ((vs1['guest_result'][i]) > (vs1['home_result'][i]))): 
            guestWinguest2 += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['1set_home'][i]) > (vs1['1set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['1set_home'][i]) < (vs1['1set_guest'][i]))): 
            set1guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['2set_home'][i]) > (vs1['2set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['2set_home'][i]) < (vs1['2set_guest'][i]))): 
            set2guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['3set_home'][i]) > (vs1['3set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['3set_home'][i]) < (vs1['3set_guest'][i]))): 
            set3guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['4set_home'][i]) > (vs1['4set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['4set_home'][i]) < (vs1['4set_guest'][i]))): 
            set4guestWin += 1
        if (vs1['4set_home'][i]) != 0: 
            set4guest += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['5set_home'][i]) > (vs1['5set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['5set_home'][i]) < (vs1['5set_guest'][i]))): 
            set5guestWin += 1
        if (vs1['5set_home'][i]) != 0: 
            set5guest += 1
        if ((vs1['guestteam'][i] == guest) and (vs1['1set_guest'][i]) > (vs1['1set_home'][i])): 
            set1guestWinguest += 1
        if ((vs1['guestteam'][i] == guest) and (vs1['2set_guest'][i]) > (vs1['2set_home'][i])): 
            set2guestWinguest += 1
        if ((vs1['guestteam'][i] == guest) and (vs1['3set_guest'][i]) > (vs1['3set_home'][i])): 
            set3guestWinguest += 1
        if ((vs1['guestteam'][i] == guest) and (vs1['4set_guest'][i]) > (vs1['4set_home'][i])): 
            set4guestWinguest += 1
        if (vs1['guestteam'][i] == guest) and (vs1['4set_guest'][i]) != 0: 
            set4guest2 += 1
        if ((vs1['guestteam'][i] == guest) and (vs1['5set_guest'][i]) > (vs1['5set_home'][i])): 
            set5guestWinguest += 1
        if (vs1['guestteam'][i] == guest) and (vs1['5set_guest'][i]) != 0: 
            set5guest2 += 1
            
        
            
        vshome4set = vs1[(vs1['4set_home'] != 0)]
        vsguest4set = vs1[(vs1['4set_guest'] != 0)]
        vshome5set = vs1[(vs1['5set_home'] != 0)]
        vsguest5set = vs1[(vs1['5set_guest'] != 0)]
            
        vshome = vs1.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set1=('1set_home', 'mean'),set2=('2set_home', 'mean'),set3=('3set_home', 'mean')).reset_index()
        vsguest = vs1.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set1=('1set_guest', 'mean'),set2=('2set_guest', 'mean'),set3=('3set_guest', 'mean')).reset_index()
        vshome4set = vshome4set.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set4=('4set_home', 'mean')).reset_index()
        vsguest4set = vsguest4set.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set4=('4set_guest', 'mean')).reset_index()
        vshome5set = vshome5set.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set5=('5set_home', 'mean')).reset_index()
        vsguest5set = vsguest5set.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set5=('5set_guest', 'mean')).reset_index()
            
        vshome = vshome[vshome.hometeam == guest]
        vsguest = vsguest[vsguest.guestteam == guest]
        vshome4set = vshome4set[vshome4set.hometeam == guest]
        vsguest4set = vsguest4set[vsguest4set.guestteam == guest]
        vshome5set = vshome5set[vshome5set.hometeam == guest]
        vsguest5set = vsguest5set[vsguest5set.guestteam == guest]
            
        vsconcat = pd.concat([vshome, vsguest])
        vsconcat4set = pd.concat([vshome4set, vsguest4set])
        vsconcat5set = pd.concat([vshome5set, vsguest5set])
            
        avgtotal = vs1["match_total"].mean().round(1)
        avgindtotal = vsconcat.mean_total.mean().round(1)
        avgind1set = vsconcat.set1.mean().round(1)
        avgind2set = vsconcat.set2.mean().round(1)
        avgind3set = vsconcat.set3.mean().round(1)
        if vsconcat4set.empty:
            avgind4set = 0
        else:
            avgind4set = vsconcat4set.set4.mean().round(1)
        if vsconcat5set.empty:
            avgind5set = 0
        else:
            avgind5set = vsconcat5set.set5.mean().round(1)
        if vsguest4set.empty:
            avgind4set2 = 0
        else:
            avgind4set2 = vsguest4set.set4.mean().round(1)
        if vsguest5set.empty:
            avgind5set2 = 0
        else:
            avgind5set2 = vsguest5set.set5.mean().round(1)
        
        
        matchesguestWintext = (f"Побед/всего: {guestWinguest}/{matchesguest}")
        set1guestWintext = (f"Побед в 1 сете: {set1guestWin}")
        set2guestWintext = (f"Побед во 2 сете: {set2guestWin}")
        set3guestWintext = (f"Побед в 3 сете: {set3guestWin}")
        set4guestWintext = (f"Побед в 4 сете/всего: {set4guestWin}/{set4guest}")
        set5guestWintext = (f"Побед в 5 сете/всего: {set5guestWin}/{set5guest}")
        matchesguestWinguesttext = (f"Побед в гостях/всего: {guestWinguest2}/{matchesguesttotal}")
        set1guestWinguesttext = (f"Побед в гостях в 1 сете: {set1guestWinguest}")
        set2guestWinguesttext = (f"Побед в гостях во 2 сете: {set2guestWinguest}")
        set3guestWinguesttext = (f"Побед в гостях в 3 сете: {set3guestWinguest}")
        set4guestWinguesttext = (f"Побед в гостях в 4 сете/всего: {set4guestWinguest}/{set4guest2}")
        set5guestWinguesttext = (f"Побед в гостях в 5 сете/всего: {set5guestWinguest}/{set5guest2}")
        averagetotal = (f"Средний тотал матчей: {avgtotal}")
        averageindtotalhome = (f"Средний ИТ дома: {vshome.mean_total.mean().round(1)}")
        averageindtotalguest = (f"Средний ИТ в гостях: {vsguest.mean_total.mean().round(1)}")
        averageindtotal = (f"Средний ИТ в матче: {avgindtotal}")
        averageind1set = (f"Средний ИТ в 1 сете: {avgind1set}")
        averageind2set = (f"Средний ИТ в 2 сете: {avgind2set}")
        averageind3set = (f"Средний ИТ в 3 сете: {avgind3set}")
        averageind4set = (f"Средний ИТ в 4 сете: {avgind4set}")
        averageind5set = (f"Средний ИТ в 5 сете: {avgind5set}")
        averageindguest1set = (f"Средний ИТ в гостях в 1 сете: {vsguest.set1.mean().round(1)}")
        averageindguest2set = (f"Средний ИТ в гостях в 2 сете: {vsguest.set2.mean().round(1)}")
        averageindguest3set = (f"Средний ИТ в гостях в 3 сете: {vsguest.set3.mean().round(1)}")
        averageindguest4set = (f"Средний ИТ в гостях в 4 сете: {avgind4set}")
        averageindguest5set = (f"Средний ИТ в гостях в 5 сете: {avgind5set}")
        
        if (vs1['1set_total'][i] > 40):
            total40B_1 += 1
        else:
            total40M_1 += 1
        total40B_1set = (f"{total40B_1}/{matchesguest}")
        total40M_1set = (f"{total40M_1}/{matchesguest}")
                        
        if (vs1['1set_total'][i] > 41):
            total41B_1 += 1 
        else:
            total41M_1 += 1
        total41M_1set = (f"{total41M_1}/{matchesguest}")
        total41B_1set = (f"{total41B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 42):
            total42B_1 += 1
        else:
            total42M_1 += 1
        total42M_1set = (f"{total42M_1}/{matchesguest}")
        total42B_1set = (f"{total42B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 43):
            total43B_1 += 1   
        else:
            total43M_1 += 1
        total43M_1set = (f"{total43M_1}/{matchesguest}")
        total43B_1set = (f"{total43B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 44):
            total44B_1 += 1   
        else:
            total44M_1 += 1
        total44M_1set = (f"{total44M_1}/{matchesguest}")
        total44B_1set = (f"{total44B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 45):
            total45B_1 += 1    
        else:
            total45M_1 += 1
        total45M_1set = (f"{total45M_1}/{matchesguest}")
        total45B_1set = (f"{total45B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 46):
            total46B_1 += 1    
        else:
            total46M_1 += 1
        total46M_1set = (f"{total46M_1}/{matchesguest}")
        total46B_1set = (f"{total46B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 47):
            total47B_1 += 1 
        else:
            total47M_1 += 1
        total47M_1set = (f"{total47M_1}/{matchesguest}")
        total47B_1set = (f"{total47B_1}/{matchesguest}") 
                
        if (vs1['1set_total'][i] > 48):
            total48B_1 += 1   
        else:
            total48M_1 += 1
        total48M_1set = (f"{total48M_1}/{matchesguest}")
        total48B_1set = (f"{total48B_1}/{matchesguest}") 
                
                
        if (vs1['2set_total'][i] > 40):
            total40B_2 += 1  
        else:
            total40M_2 += 1
        total40M_2set = (f"{total40M_2}/{matchesguest}")
        total40B_2set = (f"{total40B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 41):
            total41B_2 += 1  
        else:
            total41M_2 += 1
        total41M_2set = (f"{total41M_2}/{matchesguest}")
        total41B_2set = (f"{total41B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 42):
            total42B_2 += 1  
        else:
            total42M_2 += 1
        total42M_2set = (f"{total42M_2}/{matchesguest}")
        total42B_2set = (f"{total42B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 43):
            total43B_2 += 1    
        else:
            total43M_2 += 1
        total43M_2set = (f"{total43M_2}/{matchesguest}")
        total43B_2set = (f"{total43B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 44):
            total44B_2 += 1  
        else:
            total44M_2 += 1
        total44M_2set = (f"{total44M_2}/{matchesguest}")
        total44B_2set = (f"{total44B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 45):
            total45B_2 += 1  
        else:
            total45M_2 += 1
        total45M_2set = (f"{total45M_2}/{matchesguest}")
        total45B_2set = (f"{total45B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 46):
            total46B_2 += 1    
        else:
            total46M_2 += 1
        total46M_2set = (f"{total46M_2}/{matchesguest}")
        total46B_2set = (f"{total46B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 47):
            total47B_2 += 1    
        else:
            total47M_2 += 1
        total47M_2set = (f"{total47M_2}/{matchesguest}")
        total47B_2set = (f"{total47B_2}/{matchesguest}") 
                
        if (vs1['2set_total'][i] > 48):
            total48B_2 += 1  
        else:
            total48M_2 += 1
        total48M_2set = (f"{total48M_2}/{matchesguest}")
        total48B_2set = (f"{total48B_2}/{matchesguest}") 
                
                
        if (vs1['3set_total'][i] > 40):
            total40B_3 += 1   
        else:
            total40M_3 += 1
        total40M_3set = (f"{total40M_3}/{matchesguest}")
        total40B_3set = (f"{total40B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 41):
            total41B_3 += 1 
        else:
            total41M_3 += 1
        total41M_3set = (f"{total41M_3}/{matchesguest}")
        total41B_3set = (f"{total41B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 42):
            total42B_3 += 1   
        else:
            total42M_3 += 1
        total42M_3set = (f"{total42M_3}/{matchesguest}")
        total42B_3set = (f"{total42B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 43):
            total43B_3 += 1    
        else:
            total43M_3 += 1
        total43M_3set = (f"{total43M_3}/{matchesguest}")
        total43B_3set = (f"{total43B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 44):
            total44B_3 += 1   
        else:
            total44M_3 += 1
        total44M_3set = (f"{total44M_3}/{matchesguest}")
        total44B_3set = (f"{total44B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 45):
            total45B_3 += 1  
        else:
            total45M_3 += 1
        total45M_3set = (f"{total45M_3}/{matchesguest}")
        total45B_3set = (f"{total45B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 46):
            total46B_3 += 1   
        else:
            total46M_3 += 1
        total46M_3set = (f"{total46M_3}/{matchesguest}")
        total46B_3set = (f"{total46B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 47):
            total47B_3 += 1   
        else:
            total47M_3 += 1
        total47M_3set = (f"{total47M_3}/{matchesguest}")
        total47B_3set = (f"{total47B_3}/{matchesguest}") 
                
        if (vs1['3set_total'][i] > 48):
            total48B_3 += 1   
        else:
            total48M_3 += 1
        total48M_3set = (f"{total48M_3}/{matchesguest}")
        total48B_3set = (f"{total48B_3}/{matchesguest}") 
                
        if (vs1['4set_total'][i] > 40):
            total40B_4 += 1  
        if (0 < vs1['4set_total'][i] < 40):
            total40M_4 += 1
        total40M_4set = (f"{total40M_4}/{set4guest}")
        total40B_4set = (f"{total40B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 41):
            total41B_4 += 1  
        if (0 < vs1['4set_total'][i] < 41):
            total41M_4 += 1
        total41M_4set = (f"{total41M_4}/{set4guest}")
        total41B_4set = (f"{total41B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 42):
            total42B_4 += 1  
        if (0 < vs1['4set_total'][i] < 42):
            total42M_4 += 1
        total42M_4set = (f"{total42M_4}/{set4guest}")    
        total42B_4set = (f"{total42B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 43):
            total43B_4 += 1   
        if (0 < vs1['4set_total'][i] < 43):
            total43M_4 += 1
        total43M_4set = (f"{total43M_4}/{set4guest}")
        total43B_4set = (f"{total43B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 44):
            total44B_4 += 1   
        if (0 < vs1['4set_total'][i] < 44):
            total44M_4 += 1
        total44M_4set = (f"{total44M_4}/{set4guest}")
        total44B_4set = (f"{total44B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 45):
            total45B_4 += 1  
        if (0 < vs1['4set_total'][i] < 45):
            total45M_4 += 1
        total45M_4set = (f"{total45M_4}/{set4guest}")
        total45B_4set = (f"{total45B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 46):
            total46B_4 += 1    
        if (0 < vs1['4set_total'][i] < 46):
            total46M_4 += 1
        total46M_4set = (f"{total46M_4}/{set4guest}")
        total46B_4set = (f"{total46B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 47):
            total47B_4 += 1  
        if (0 < vs1['4set_total'][i] < 47):
            total47M_4 += 1
        total47M_4set = (f"{total47M_4}/{set4guest}")
        total47B_4set = (f"{total47B_4}/{set4guest}") 
                
        if (vs1['4set_total'][i] > 48):
            total48B_4 += 1  
        if (0 < vs1['4set_total'][i] < 48):
            total48M_4 += 1
        total48M_4set = (f"{total48M_4}/{set4guest}")
        total48B_4set = (f"{total48B_4}/{set4guest}") 
                
        if (vs1['5set_total'][i] > 20):
            total20B_5 += 1  
        if (0 < vs1['5set_total'][i] < 20):
            total20M_5 += 1 
        total20M_5set = (f"{total20M_5}/{set5guest}")
        total20B_5set = (f"{total20B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 21):
            total21B_5 += 1  
        if (0 < vs1['5set_total'][i] < 21):
            total21M_5 += 1 
        total21M_5set = (f"{total21M_5}/{set5guest}")
        total21B_5set = (f"{total21B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 22):
            total22B_5 += 1  
        if (0 < vs1['5set_total'][i] < 22):
            total22M_5 += 1 
        total22M_5set = (f"{total22M_5}/{set5guest}")
        total22B_5set = (f"{total22B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 23):
            total23B_5 += 1    
        if (0 < vs1['5set_total'][i] < 23):
            total23M_5 += 1 
        total23M_5set = (f"{total23M_5}/{set5guest}")
        total23B_5set = (f"{total23B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 24):
            total24B_5 += 1    
        if (0 < vs1['5set_total'][i] < 24):
            total24M_5 += 1 
        total24M_5set = (f"{total24M_5}/{set5guest}")
        total24B_5set = (f"{total24B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 25):
            total25B_5 += 1    
        if (0 < vs1['5set_total'][i] < 25):
            total25M_5 += 1 
        total25M_5set = (f"{total25M_5}/{set5guest}")
        total25B_5set = (f"{total25B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 26):
            total26B_5 += 1   
        if (0 < vs1['5set_total'][i] < 26):
            total26M_5 += 1 
        total26M_5set = (f"{total26M_5}/{set5guest}")
        total26B_5set = (f"{total26B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 27):
            total27B_5 += 1  
        if (0 < vs1['5set_total'][i] < 27):
            total27M_5 += 1  
        total27M_5set = (f"{total27M_5}/{set5guest}")
        total27B_5set = (f"{total27B_5}/{set5guest}") 
                
        if (vs1['5set_total'][i] > 28):
            total28B_5 += 1  
        if (0 < vs1['5set_total'][i] < 28):
            total28M_5 += 1  
        total28M_5set = (f"{total28M_5}/{set5guest}")
        total28B_5set = (f"{total28B_5}/{set5guest}")         
    
    fig = go.Figure(data=[go.Table(
        columnwidth = [30,10,25,35],
        header=dict(
            values=[title,'Дата','Команды','Счет'],
            line_color='whitesmoke',
            fill_color='whitesmoke',
            align=['left','left','left'],
            height=25,
            font=dict(size=12)),
        cells=dict(
            values=[[matchesguestWintext,set1guestWintext,set2guestWintext,set3guestWintext,set4guestWintext,set5guestWintext,matchesguestWinguesttext,set1guestWinguesttext,set2guestWinguesttext,set3guestWinguesttext,set4guestWinguesttext,set5guestWinguesttext,averagetotal,averageindtotal,averageindtotalhome,averageindtotalguest,averageind1set, averageind2set, averageind3set, averageind4set, averageind5set,averageindguest1set,averageindguest2set,averageindguest3set,averageindguest4set,averageindguest5set],
                    vs1.start_dt,vs1.events_command,vs1.events_score],
            fill_color='white',
            line_color='whitesmoke',
            align=['left','left','left'],
            height=20,
            font=dict(size=10)
        ))
    ])
    
    colors = n_colors('rgb(255, 255, 255)', 'rgb(152, 192, 121)', 100, colortype='rgb')
    
    fig2 = go.Figure(data=[go.Table(
        #columnwidth = [50,50],
        header=dict(
            values=['','1 СЕТ','2 СЕТ','3 СЕТ','4 СЕТ','5 СЕТ','','1 СЕТ','2 СЕТ','3 СЕТ','4 СЕТ','5 СЕТ'],
            line_color='whitesmoke',
            fill_color='whitesmoke',
            font=dict(size=10)),
        cells=dict(
            values=[['<b>ТБ40,5<b>','<b>ТБ41,5<b>','<b>ТБ42,5<b>','<b>ТБ43,5<b>','<b>ТБ44,5<b>','<b>ТБ45,5<b>','<b>ТБ46,5<b>','<b>ТБ47,5<b>','<b>ТБ48,5<b>'],
                    [total40B_1set, total41B_1set, total42B_1set, total43B_1set, total44B_1set, total45B_1set, total46B_1set, total47B_1set, total48B_1set],
                    [total40B_2set, total41B_2set, total42B_2set, total43B_2set, total44B_2set, total45B_2set, total46B_2set, total47B_2set, total48B_2set],
                    [total40B_3set, total41B_3set, total42B_3set, total43B_3set, total44B_3set, total45B_3set, total46B_3set, total47B_3set, total48B_3set],
                    [total40B_4set, total41B_4set, total42B_4set, total43B_4set, total44B_4set, total45B_4set, total46B_4set, total47B_4set, total48B_4set],
                    [total20B_5set, total21B_5set, total22B_5set, total23B_5set, total24B_5set, total25B_5set, total26B_5set, total27B_5set, total28B_5set],
                    ['<b>ТМ40,5<b>','<b>ТМ41,5<b>','<b>ТМ42,5<b>','<b>ТМ43,5<b>','<b>ТМ44,5<b>','<b>ТМ45,5<b>','<b>ТМ46,5<b>','<b>ТМ47,5<b>','<b>ТМ48,5<b>'],
                    [total40M_1set, total41M_1set, total42M_1set, total43M_1set, total44M_1set, total45M_1set, total46M_1set, total47M_1set, total48M_1set],
                    [total40M_2set, total41M_2set, total42M_2set, total43M_2set, total44M_2set, total45M_2set, total46M_2set, total47M_2set, total48M_2set],
                    [total40M_3set, total41M_3set, total42M_3set, total43M_3set, total44M_3set, total45M_3set, total46M_3set, total47M_3set, total48M_3set],
                    [total40M_4set, total41M_4set, total42M_4set, total43M_4set, total44M_4set, total45M_4set, total46M_4set, total47M_4set, total48M_4set],
                    [total20M_5set, total21M_5set, total22M_5set, total23M_5set, total24M_5set, total25M_5set, total26M_5set, total27M_5set, total28M_5set]],
            fill_color=[
                    ['whitesmoke'],
                    [np.array(colors)[total40B_1],np.array(colors)[total41B_1],np.array(colors)[total42B_1],np.array(colors)[total43B_1],np.array(colors)[total44B_1],np.array(colors)[total45B_1],np.array(colors)[total46B_1],np.array(colors)[total47B_1],np.array(colors)[total48B_1]],
                    [np.array(colors)[total40B_2],np.array(colors)[total41B_2],np.array(colors)[total42B_2],np.array(colors)[total43B_2],np.array(colors)[total44B_2],np.array(colors)[total45B_2],np.array(colors)[total46B_2],np.array(colors)[total47B_2],np.array(colors)[total48B_2]],
                    [np.array(colors)[total40B_3],np.array(colors)[total41B_3],np.array(colors)[total42B_3],np.array(colors)[total43B_3],np.array(colors)[total44B_3],np.array(colors)[total45B_3],np.array(colors)[total46B_3],np.array(colors)[total47B_3],np.array(colors)[total48B_3]],
                    [np.array(colors)[total40B_4],np.array(colors)[total41B_4],np.array(colors)[total42B_4],np.array(colors)[total43B_4],np.array(colors)[total44B_4],np.array(colors)[total45B_4],np.array(colors)[total46B_4],np.array(colors)[total47B_4],np.array(colors)[total48B_4]],
                    [np.array(colors)[total20B_5],np.array(colors)[total21B_5],np.array(colors)[total22B_5],np.array(colors)[total23B_5],np.array(colors)[total24B_5],np.array(colors)[total25B_5],np.array(colors)[total26B_5],np.array(colors)[total27B_5],np.array(colors)[total28B_5]],
                    ['whitesmoke'],
                    [np.array(colors)[total40M_1],np.array(colors)[total41M_1],np.array(colors)[total42M_1],np.array(colors)[total43M_1],np.array(colors)[total44M_1],np.array(colors)[total45M_1],np.array(colors)[total46M_1],np.array(colors)[total47M_1],np.array(colors)[total48M_1]],
                    [np.array(colors)[total40M_2],np.array(colors)[total41M_2],np.array(colors)[total42M_2],np.array(colors)[total43M_2],np.array(colors)[total44M_2],np.array(colors)[total45M_2],np.array(colors)[total46M_2],np.array(colors)[total47M_2],np.array(colors)[total48M_2]],
                    [np.array(colors)[total40M_3],np.array(colors)[total41M_3],np.array(colors)[total42M_3],np.array(colors)[total43M_3],np.array(colors)[total44M_3],np.array(colors)[total45M_3],np.array(colors)[total46M_3],np.array(colors)[total47M_3],np.array(colors)[total48M_3]],
                    [np.array(colors)[total40M_4],np.array(colors)[total41M_4],np.array(colors)[total42M_4],np.array(colors)[total43M_4],np.array(colors)[total44M_4],np.array(colors)[total45M_4],np.array(colors)[total46M_4],np.array(colors)[total47M_4],np.array(colors)[total48M_4]],
                    [np.array(colors)[total20M_5],np.array(colors)[total21M_5],np.array(colors)[total22M_5],np.array(colors)[total23M_5],np.array(colors)[total24M_5],np.array(colors)[total25M_5],np.array(colors)[total26M_5],np.array(colors)[total27M_5],np.array(colors)[total28M_5]],
                    ],
            line_color=[
                    ['whitesmoke'],
                    [np.array(colors)[total40B_1],np.array(colors)[total41B_1],np.array(colors)[total42B_1],np.array(colors)[total43B_1],np.array(colors)[total44B_1],np.array(colors)[total45B_1],np.array(colors)[total46B_1],np.array(colors)[total47B_1],np.array(colors)[total48B_1]],
                    [np.array(colors)[total40B_2],np.array(colors)[total41B_2],np.array(colors)[total42B_2],np.array(colors)[total43B_2],np.array(colors)[total44B_2],np.array(colors)[total45B_2],np.array(colors)[total46B_2],np.array(colors)[total47B_2],np.array(colors)[total48B_2]],
                    [np.array(colors)[total40B_3],np.array(colors)[total41B_3],np.array(colors)[total42B_3],np.array(colors)[total43B_3],np.array(colors)[total44B_3],np.array(colors)[total45B_3],np.array(colors)[total46B_3],np.array(colors)[total47B_3],np.array(colors)[total48B_3]],
                    [np.array(colors)[total40B_4],np.array(colors)[total41B_4],np.array(colors)[total42B_4],np.array(colors)[total43B_4],np.array(colors)[total44B_4],np.array(colors)[total45B_4],np.array(colors)[total46B_4],np.array(colors)[total47B_4],np.array(colors)[total48B_4]],
                    [np.array(colors)[total20B_5],np.array(colors)[total21B_5],np.array(colors)[total22B_5],np.array(colors)[total23B_5],np.array(colors)[total24B_5],np.array(colors)[total25B_5],np.array(colors)[total26B_5],np.array(colors)[total27B_5],np.array(colors)[total28B_5]],
                    ['whitesmoke'],
                    [np.array(colors)[total40M_1],np.array(colors)[total41M_1],np.array(colors)[total42M_1],np.array(colors)[total43M_1],np.array(colors)[total44M_1],np.array(colors)[total45M_1],np.array(colors)[total46M_1],np.array(colors)[total47M_1],np.array(colors)[total48M_1]],
                    [np.array(colors)[total40M_2],np.array(colors)[total41M_2],np.array(colors)[total42M_2],np.array(colors)[total43M_2],np.array(colors)[total44M_2],np.array(colors)[total45M_2],np.array(colors)[total46M_2],np.array(colors)[total47M_2],np.array(colors)[total48M_2]],
                    [np.array(colors)[total40M_3],np.array(colors)[total41M_3],np.array(colors)[total42M_3],np.array(colors)[total43M_3],np.array(colors)[total44M_3],np.array(colors)[total45M_3],np.array(colors)[total46M_3],np.array(colors)[total47M_3],np.array(colors)[total48M_3]],
                    [np.array(colors)[total40M_4],np.array(colors)[total41M_4],np.array(colors)[total42M_4],np.array(colors)[total43M_4],np.array(colors)[total44M_4],np.array(colors)[total45M_4],np.array(colors)[total46M_4],np.array(colors)[total47M_4],np.array(colors)[total48M_4]],
                    [np.array(colors)[total20M_5],np.array(colors)[total21M_5],np.array(colors)[total22M_5],np.array(colors)[total23M_5],np.array(colors)[total24M_5],np.array(colors)[total25M_5],np.array(colors)[total26M_5],np.array(colors)[total27M_5],np.array(colors)[total28M_5]], 
                ],
            align='center',
            height=20,
            font=dict(size=10)
        ))
    ])
    
    fig.show()
    fig2.show()

def GetStatHome(home, guest):
    matcheshome = 0 
    matcheshometotal = 0
    
    set4home = 0
    set5home = 0
    set4home2 = 0
    set5home2 = 0
    
    homeWinhome = 0
    homeWinhome2 = 0
    set1homeWin = 0
    set2homeWin = 0
    set3homeWin = 0
    set4homeWin = 0
    set5homeWin = 0
    set1homeWinhome = 0
    set2homeWinhome = 0
    set3homeWinhome = 0
    set4homeWinhome = 0
    set5homeWinhome = 0
    
    total40B_1 = 0
    total41B_1 = 0
    total42B_1 = 0
    total43B_1 = 0
    total44B_1 = 0
    total45B_1 = 0
    total46B_1 = 0
    total47B_1 = 0
    total48B_1 = 0
    
    total40B_2 = 0
    total41B_2 = 0
    total42B_2 = 0
    total43B_2 = 0
    total44B_2 = 0
    total45B_2 = 0
    total46B_2 = 0
    total47B_2 = 0
    total48B_2 = 0

    total40B_3 = 0
    total41B_3 = 0
    total42B_3 = 0
    total43B_3 = 0
    total44B_3 = 0
    total45B_3 = 0
    total46B_3 = 0
    total47B_3 = 0
    total48B_3 = 0

    total40B_4 = 0
    total41B_4 = 0
    total42B_4 = 0
    total43B_4 = 0
    total44B_4 = 0
    total45B_4 = 0
    total46B_4 = 0
    total47B_4 = 0
    total48B_4 = 0
    
    total20B_5 = 0
    total21B_5 = 0
    total22B_5 = 0
    total23B_5 = 0
    total24B_5 = 0
    total25B_5 = 0
    total26B_5 = 0
    total27B_5 = 0
    total28B_5 = 0
    
    total40M_1 = 0
    total41M_1 = 0
    total42M_1 = 0
    total43M_1 = 0
    total44M_1 = 0
    total45M_1 = 0
    total46M_1 = 0
    total47M_1 = 0
    total48M_1 = 0
    
    total40M_2 = 0
    total41M_2 = 0
    total42M_2 = 0
    total43M_2 = 0
    total44M_2 = 0
    total45M_2 = 0
    total46M_2 = 0
    total47M_2 = 0
    total48M_2 = 0

    total40M_3 = 0
    total41M_3 = 0
    total42M_3 = 0
    total43M_3 = 0
    total44M_3 = 0
    total45M_3 = 0
    total46M_3 = 0
    total47M_3 = 0
    total48M_3 = 0

    total40M_4 = 0
    total41M_4 = 0
    total42M_4 = 0
    total43M_4 = 0
    total44M_4 = 0
    total45M_4 = 0
    total46M_4 = 0
    total47M_4 = 0
    total48M_4 = 0
    
    total20M_5 = 0
    total21M_5 = 0
    total22M_5 = 0
    total23M_5 = 0
    total24M_5 = 0
    total25M_5 = 0
    total26M_5 = 0
    total27M_5 = 0
    total28M_5 = 0
    
    
    
    vs1drop = volleystat[((volleystat.hometeam == home) | (volleystat.guestteam == home))].tail(50)
    vs1 = vs1drop.reset_index(drop=True)
    
    
    for i in range(len(vs1)):
        if ((vs1['hometeam'][i] == home) or (vs1['guestteam'][i] == home)):
            matcheshome += 1
            title = (f"{home}: last {matcheshome}")
        if (((vs1['hometeam'][i] == home) and (vs1['home_total'][i]) > (vs1['guest_total'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['home_total'][i]) < (vs1['guest_total'][i]))): 
            homeWinhome += 1
        if(vs1['hometeam'][i] == home): 
            matcheshometotal += 1
        if((vs1['hometeam'][i] == home) and ((vs1['home_result'][i]) > (vs1['guest_result'][i]))): 
            homeWinhome2 += 1
        if (((vs1['hometeam'][i] == home) and (vs1['1set_home'][i]) > (vs1['1set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['1set_home'][i]) < (vs1['1set_guest'][i]))): 
            set1homeWin += 1
        if (((vs1['hometeam'][i] == home) and (vs1['2set_home'][i]) > (vs1['2set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['2set_home'][i]) < (vs1['2set_guest'][i]))): 
            set2homeWin += 1
        if (((vs1['hometeam'][i] == home) and (vs1['3set_home'][i]) > (vs1['3set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['3set_home'][i]) < (vs1['3set_guest'][i]))): 
            set3homeWin += 1
        if (((vs1['hometeam'][i] == home) and (vs1['4set_home'][i]) > (vs1['4set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['4set_home'][i]) < (vs1['4set_guest'][i]))): 
            set4homeWin += 1
        if (vs1['4set_home'][i]) != 0: 
            set4home += 1
        if (((vs1['hometeam'][i] == home) and (vs1['5set_home'][i]) > (vs1['5set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['5set_home'][i]) < (vs1['5set_guest'][i]))): 
            set5homeWin += 1
        if (vs1['5set_home'][i]) != 0: 
            set5home += 1
        if ((vs1['hometeam'][i] == home) and (vs1['1set_home'][i]) > (vs1['1set_guest'][i])): 
            set1homeWinhome += 1
        if ((vs1['hometeam'][i] == home) and (vs1['2set_home'][i]) > (vs1['2set_guest'][i])): 
            set2homeWinhome += 1
        if ((vs1['hometeam'][i] == home) and (vs1['3set_home'][i]) > (vs1['3set_guest'][i])): 
            set3homeWinhome += 1
        if ((vs1['hometeam'][i] == home) and (vs1['4set_home'][i]) > (vs1['4set_guest'][i])): 
            set4homeWinhome += 1
        if (vs1['hometeam'][i] == home) and (vs1['4set_home'][i]) != 0: 
            set4home2 += 1
        if ((vs1['hometeam'][i] == home) and (vs1['5set_home'][i]) > (vs1['5set_guest'][i])): 
            set5homeWinhome += 1
        if (vs1['hometeam'][i] == home) and (vs1['5set_home'][i]) != 0: 
            set5home2 += 1
            
        
            
        vshome4set = vs1[(vs1['4set_home'] != 0)]
        vsguest4set = vs1[(vs1['4set_guest'] != 0)]
        vshome5set = vs1[(vs1['5set_home'] != 0)]
        vsguest5set = vs1[(vs1['5set_guest'] != 0)]
            
        vshome = vs1.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set1=('1set_home', 'mean'),set2=('2set_home', 'mean'),set3=('3set_home', 'mean')).reset_index()
        vsguest = vs1.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set1=('1set_guest', 'mean'),set2=('2set_guest', 'mean'),set3=('3set_guest', 'mean')).reset_index()
        vshome4set = vshome4set.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set4=('4set_home', 'mean')).reset_index()
        vsguest4set = vsguest4set.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set4=('4set_guest', 'mean')).reset_index()
        vshome5set = vshome5set.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set5=('5set_home', 'mean')).reset_index()
        vsguest5set = vsguest5set.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set5=('5set_guest', 'mean')).reset_index()
            
        vshome = vshome[vshome.hometeam == home]
        vsguest = vsguest[vsguest.guestteam == home]
        vshome4set = vshome4set[vshome4set.hometeam == home]
        vsguest4set = vsguest4set[vsguest4set.guestteam == home]
        vshome5set = vshome5set[vshome5set.hometeam == home]
        vsguest5set = vsguest5set[vsguest5set.guestteam == home]
            
        vsconcat = pd.concat([vshome, vsguest])
        vsconcat4set = pd.concat([vshome4set, vsguest4set])
        vsconcat5set = pd.concat([vshome5set, vsguest5set])
            
        avgtotal = vs1["match_total"].mean().round(1)
        avgindtotal = vsconcat.mean_total.mean().round(1)
        avgind1set = vsconcat.set1.mean().round(1)
        avgind2set = vsconcat.set2.mean().round(1)
        avgind3set = vsconcat.set3.mean().round(1)
        if vsconcat4set.empty:
            avgind4set = 0
        else:
            avgind4set = vsconcat4set.set4.mean().round(1)
        if vsconcat5set.empty:
            avgind5set = 0
        else:
            avgind5set = vsconcat5set.set5.mean().round(1)
        if vshome4set.empty:
            avgind4set2 = 0
        else:
            avgind4set2 = vshome4set.set4.mean().round(1)
        if vshome5set.empty:
            avgind5set2 = 0
        else:
            avgind5set2 = vshome5set.set5.mean().round(1)
        
        
        matcheshomeWintext = (f"Побед/всего: {homeWinhome}/{matcheshome}")
        set1homeWintext = (f"Побед в 1 сете: {set1homeWin}")
        set2homeWintext = (f"Побед во 2 сете: {set2homeWin}")
        set3homeWintext = (f"Побед в 3 сете: {set3homeWin}")
        set4homeWintext = (f"Побед в 4 сете/всего: {set4homeWin}/{set4home}")
        set5homeWintext = (f"Побед в 5 сете/всего: {set5homeWin}/{set5home}")
        matcheshomeWinhometext = (f"Побед дома/всего: {homeWinhome2}/{matcheshometotal}")
        set1homeWinhometext = (f"Побед дома в 1 сете: {set1homeWinhome}")
        set2homeWinhometext = (f"Побед дома во 2 сете: {set2homeWinhome}")
        set3homeWinhometext = (f"Побед дома в 3 сете: {set3homeWinhome}")
        set4homeWinhometext = (f"Побед дома в 4 сете/всего: {set4homeWinhome}/{set4home2}")
        set5homeWinhometext = (f"Побед дома в 5 сете/всего: {set5homeWinhome}/{set5home2}")
        averagetotal = (f"Средний тотал матчей: {avgtotal}")
        averageindtotalhome = (f"Средний ИТ дома: {vshome.mean_total.mean().round(1)}")
        averageindtotalguest = (f"Средний ИТ в гостях: {vsguest.mean_total.mean().round(1)}")
        averageindtotal = (f"Средний ИТ в матче: {avgindtotal}")
        averageind1set = (f"Средний ИТ в 1 сете: {avgind1set}")
        averageind2set = (f"Средний ИТ в 2 сете: {avgind2set}")
        averageind3set = (f"Средний ИТ в 3 сете: {avgind3set}")
        averageind4set = (f"Средний ИТ в 4 сете: {avgind4set}")
        averageind5set = (f"Средний ИТ в 5 сете: {avgind5set}")
        averageindhome1set = (f"Средний ИТ дома в 1 сете: {vshome.set1.mean().round(1)}")
        averageindhome2set = (f"Средний ИТ дома в 2 сете: {vshome.set2.mean().round(1)}")
        averageindhome3set = (f"Средний ИТ дома в 3 сете: {vshome.set3.mean().round(1)}")
        averageindhome4set = (f"Средний ИТ дома в 4 сете: {avgind4set}")
        averageindhome5set = (f"Средний ИТ дома в 5 сете: {avgind5set}")
        
        if (vs1['1set_total'][i] > 40):
            total40B_1 += 1
        else:
            total40M_1 += 1
        total40B_1set = (f"{total40B_1}/{matcheshome}")
        total40M_1set = (f"{total40M_1}/{matcheshome}")
                        
        if (vs1['1set_total'][i] > 41):
            total41B_1 += 1 
        else:
            total41M_1 += 1
        total41M_1set = (f"{total41M_1}/{matcheshome}")
        total41B_1set = (f"{total41B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 42):
            total42B_1 += 1
        else:
            total42M_1 += 1
        total42M_1set = (f"{total42M_1}/{matcheshome}")
        total42B_1set = (f"{total42B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 43):
            total43B_1 += 1   
        else:
            total43M_1 += 1
        total43M_1set = (f"{total43M_1}/{matcheshome}")
        total43B_1set = (f"{total43B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 44):
            total44B_1 += 1   
        else:
            total44M_1 += 1
        total44M_1set = (f"{total44M_1}/{matcheshome}")
        total44B_1set = (f"{total44B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 45):
            total45B_1 += 1    
        else:
            total45M_1 += 1
        total45M_1set = (f"{total45M_1}/{matcheshome}")
        total45B_1set = (f"{total45B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 46):
            total46B_1 += 1    
        else:
            total46M_1 += 1
        total46M_1set = (f"{total46M_1}/{matcheshome}")
        total46B_1set = (f"{total46B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 47):
            total47B_1 += 1 
        else:
            total47M_1 += 1
        total47M_1set = (f"{total47M_1}/{matcheshome}")
        total47B_1set = (f"{total47B_1}/{matcheshome}") 
                
        if (vs1['1set_total'][i] > 48):
            total48B_1 += 1   
        else:
            total48M_1 += 1
        total48M_1set = (f"{total48M_1}/{matcheshome}")
        total48B_1set = (f"{total48B_1}/{matcheshome}") 
                
                
        if (vs1['2set_total'][i] > 40):
            total40B_2 += 1  
        else:
            total40M_2 += 1
        total40M_2set = (f"{total40M_2}/{matcheshome}")
        total40B_2set = (f"{total40B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 41):
            total41B_2 += 1  
        else:
            total41M_2 += 1
        total41M_2set = (f"{total41M_2}/{matcheshome}")
        total41B_2set = (f"{total41B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 42):
            total42B_2 += 1  
        else:
            total42M_2 += 1
        total42M_2set = (f"{total42M_2}/{matcheshome}")
        total42B_2set = (f"{total42B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 43):
            total43B_2 += 1    
        else:
            total43M_2 += 1
        total43M_2set = (f"{total43M_2}/{matcheshome}")
        total43B_2set = (f"{total43B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 44):
            total44B_2 += 1  
        else:
            total44M_2 += 1
        total44M_2set = (f"{total44M_2}/{matcheshome}")
        total44B_2set = (f"{total44B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 45):
            total45B_2 += 1  
        else:
            total45M_2 += 1
        total45M_2set = (f"{total45M_2}/{matcheshome}")
        total45B_2set = (f"{total45B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 46):
            total46B_2 += 1    
        else:
            total46M_2 += 1
        total46M_2set = (f"{total46M_2}/{matcheshome}")
        total46B_2set = (f"{total46B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 47):
            total47B_2 += 1    
        else:
            total47M_2 += 1
        total47M_2set = (f"{total47M_2}/{matcheshome}")
        total47B_2set = (f"{total47B_2}/{matcheshome}") 
                
        if (vs1['2set_total'][i] > 48):
            total48B_2 += 1  
        else:
            total48M_2 += 1
        total48M_2set = (f"{total48M_2}/{matcheshome}")
        total48B_2set = (f"{total48B_2}/{matcheshome}") 
                
                
        if (vs1['3set_total'][i] > 40):
            total40B_3 += 1   
        else:
            total40M_3 += 1
        total40M_3set = (f"{total40M_3}/{matcheshome}")
        total40B_3set = (f"{total40B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 41):
            total41B_3 += 1 
        else:
            total41M_3 += 1
        total41M_3set = (f"{total41M_3}/{matcheshome}")
        total41B_3set = (f"{total41B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 42):
            total42B_3 += 1   
        else:
            total42M_3 += 1
        total42M_3set = (f"{total42M_3}/{matcheshome}")
        total42B_3set = (f"{total42B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 43):
            total43B_3 += 1    
        else:
            total43M_3 += 1
        total43M_3set = (f"{total43M_3}/{matcheshome}")
        total43B_3set = (f"{total43B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 44):
            total44B_3 += 1   
        else:
            total44M_3 += 1
        total44M_3set = (f"{total44M_3}/{matcheshome}")
        total44B_3set = (f"{total44B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 45):
            total45B_3 += 1  
        else:
            total45M_3 += 1
        total45M_3set = (f"{total45M_3}/{matcheshome}")
        total45B_3set = (f"{total45B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 46):
            total46B_3 += 1   
        else:
            total46M_3 += 1
        total46M_3set = (f"{total46M_3}/{matcheshome}")
        total46B_3set = (f"{total46B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 47):
            total47B_3 += 1   
        else:
            total47M_3 += 1
        total47M_3set = (f"{total47M_3}/{matcheshome}")
        total47B_3set = (f"{total47B_3}/{matcheshome}") 
                
        if (vs1['3set_total'][i] > 48):
            total48B_3 += 1   
        else:
            total48M_3 += 1
        total48M_3set = (f"{total48M_3}/{matcheshome}")
        total48B_3set = (f"{total48B_3}/{matcheshome}") 
                
        if (vs1['4set_total'][i] > 40):
            total40B_4 += 1  
        if (0 < vs1['4set_total'][i] < 40):
            total40M_4 += 1
        total40M_4set = (f"{total40M_4}/{set4home}")
        total40B_4set = (f"{total40B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 41):
            total41B_4 += 1  
        if (0 < vs1['4set_total'][i] < 41):
            total41M_4 += 1
        total41M_4set = (f"{total41M_4}/{set4home}")
        total41B_4set = (f"{total41B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 42):
            total42B_4 += 1  
        if (0 < vs1['4set_total'][i] < 42):
            total42M_4 += 1
        total42M_4set = (f"{total42M_4}/{set4home}")    
        total42B_4set = (f"{total42B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 43):
            total43B_4 += 1   
        if (0 < vs1['4set_total'][i] < 43):
            total43M_4 += 1
        total43M_4set = (f"{total43M_4}/{set4home}")
        total43B_4set = (f"{total43B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 44):
            total44B_4 += 1   
        if (0 < vs1['4set_total'][i] < 44):
            total44M_4 += 1
        total44M_4set = (f"{total44M_4}/{set4home}")
        total44B_4set = (f"{total44B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 45):
            total45B_4 += 1  
        if (0 < vs1['4set_total'][i] < 45):
            total45M_4 += 1
        total45M_4set = (f"{total45M_4}/{set4home}")
        total45B_4set = (f"{total45B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 46):
            total46B_4 += 1    
        if (0 < vs1['4set_total'][i] < 46):
            total46M_4 += 1
        total46M_4set = (f"{total46M_4}/{set4home}")
        total46B_4set = (f"{total46B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 47):
            total47B_4 += 1  
        if (0 < vs1['4set_total'][i] < 47):
            total47M_4 += 1
        total47M_4set = (f"{total47M_4}/{set4home}")
        total47B_4set = (f"{total47B_4}/{set4home}") 
                
        if (vs1['4set_total'][i] > 48):
            total48B_4 += 1  
        if (0 < vs1['4set_total'][i] < 48):
            total48M_4 += 1
        total48M_4set = (f"{total48M_4}/{set4home}")
        total48B_4set = (f"{total48B_4}/{set4home}") 
                
        if (vs1['5set_total'][i] > 20):
            total20B_5 += 1  
        if (0 < vs1['5set_total'][i] < 20):
            total20M_5 += 1 
        total20M_5set = (f"{total20M_5}/{set5home}")
        total20B_5set = (f"{total20B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 21):
            total21B_5 += 1  
        if (0 < vs1['5set_total'][i] < 21):
            total21M_5 += 1 
        total21M_5set = (f"{total21M_5}/{set5home}")
        total21B_5set = (f"{total21B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 22):
            total22B_5 += 1  
        if (0 < vs1['5set_total'][i] < 22):
            total22M_5 += 1 
        total22M_5set = (f"{total22M_5}/{set5home}")
        total22B_5set = (f"{total22B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 23):
            total23B_5 += 1    
        if (0 < vs1['5set_total'][i] < 23):
            total23M_5 += 1 
        total23M_5set = (f"{total23M_5}/{set5home}")
        total23B_5set = (f"{total23B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 24):
            total24B_5 += 1    
        if (0 < vs1['5set_total'][i] < 24):
            total24M_5 += 1 
        total24M_5set = (f"{total24M_5}/{set5home}")
        total24B_5set = (f"{total24B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 25):
            total25B_5 += 1    
        if (0 < vs1['5set_total'][i] < 25):
            total25M_5 += 1 
        total25M_5set = (f"{total25M_5}/{set5home}")
        total25B_5set = (f"{total25B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 26):
            total26B_5 += 1   
        if (0 < vs1['5set_total'][i] < 26):
            total26M_5 += 1 
        total26M_5set = (f"{total26M_5}/{set5home}")
        total26B_5set = (f"{total26B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 27):
            total27B_5 += 1  
        if (0 < vs1['5set_total'][i] < 27):
            total27M_5 += 1  
        total27M_5set = (f"{total27M_5}/{set5home}")
        total27B_5set = (f"{total27B_5}/{set5home}") 
                
        if (vs1['5set_total'][i] > 28):
            total28B_5 += 1  
        if (0 < vs1['5set_total'][i] < 28):
            total28M_5 += 1  
        total28M_5set = (f"{total28M_5}/{set5home}")
        total28B_5set = (f"{total28B_5}/{set5home}")         
    
    fig = go.Figure(data=[go.Table(
        columnwidth = [30,10,25,35],
        header=dict(
            values=[title,'Дата','Команды','Счет'],
            line_color='whitesmoke',
            fill_color='whitesmoke',
            align=['left','left','left'],
            height=25,
            font=dict(size=12)),
        cells=dict(
            values=[[matcheshomeWintext,set1homeWintext,set2homeWintext,set3homeWintext,set4homeWintext,set5homeWintext,matcheshomeWinhometext,set1homeWinhometext,set2homeWinhometext,set3homeWinhometext,set4homeWinhometext,set5homeWinhometext,averagetotal,averageindtotal,averageindtotalhome,averageindtotalguest,averageind1set, averageind2set, averageind3set, averageind4set, averageind5set,averageindhome1set,averageindhome2set,averageindhome3set,averageindhome4set,averageindhome5set],
                    vs1.start_dt,vs1.events_command,vs1.events_score],
            fill_color='white',
            line_color='whitesmoke',
            align=['left','left','left'],
            height=20,
            font=dict(size=10)
        ))
    ])
    
    colors = n_colors('rgb(255, 255, 255)', 'rgb(152, 192, 121)', 100, colortype='rgb')
    
    fig2 = go.Figure(data=[go.Table(
        #columnwidth = [50,50],
        header=dict(
            values=['','1 СЕТ','2 СЕТ','3 СЕТ','4 СЕТ','5 СЕТ','','1 СЕТ','2 СЕТ','3 СЕТ','4 СЕТ','5 СЕТ'],
            line_color='whitesmoke',
            fill_color='whitesmoke',
            font=dict(size=10)),
        cells=dict(
            values=[['<b>ТБ40,5<b>','<b>ТБ41,5<b>','<b>ТБ42,5<b>','<b>ТБ43,5<b>','<b>ТБ44,5<b>','<b>ТБ45,5<b>','<b>ТБ46,5<b>','<b>ТБ47,5<b>','<b>ТБ48,5<b>'],
                    [total40B_1set, total41B_1set, total42B_1set, total43B_1set, total44B_1set, total45B_1set, total46B_1set, total47B_1set, total48B_1set],
                    [total40B_2set, total41B_2set, total42B_2set, total43B_2set, total44B_2set, total45B_2set, total46B_2set, total47B_2set, total48B_2set],
                    [total40B_3set, total41B_3set, total42B_3set, total43B_3set, total44B_3set, total45B_3set, total46B_3set, total47B_3set, total48B_3set],
                    [total40B_4set, total41B_4set, total42B_4set, total43B_4set, total44B_4set, total45B_4set, total46B_4set, total47B_4set, total48B_4set],
                    [total20B_5set, total21B_5set, total22B_5set, total23B_5set, total24B_5set, total25B_5set, total26B_5set, total27B_5set, total28B_5set],
                    ['<b>ТМ40,5<b>','<b>ТМ41,5<b>','<b>ТМ42,5<b>','<b>ТМ43,5<b>','<b>ТМ44,5<b>','<b>ТМ45,5<b>','<b>ТМ46,5<b>','<b>ТМ47,5<b>','<b>ТМ48,5<b>'],
                    [total40M_1set, total41M_1set, total42M_1set, total43M_1set, total44M_1set, total45M_1set, total46M_1set, total47M_1set, total48M_1set],
                    [total40M_2set, total41M_2set, total42M_2set, total43M_2set, total44M_2set, total45M_2set, total46M_2set, total47M_2set, total48M_2set],
                    [total40M_3set, total41M_3set, total42M_3set, total43M_3set, total44M_3set, total45M_3set, total46M_3set, total47M_3set, total48M_3set],
                    [total40M_4set, total41M_4set, total42M_4set, total43M_4set, total44M_4set, total45M_4set, total46M_4set, total47M_4set, total48M_4set],
                    [total20M_5set, total21M_5set, total22M_5set, total23M_5set, total24M_5set, total25M_5set, total26M_5set, total27M_5set, total28M_5set]],
            fill_color=[
                    ['whitesmoke'],
                    [np.array(colors)[total40B_1],np.array(colors)[total41B_1],np.array(colors)[total42B_1],np.array(colors)[total43B_1],np.array(colors)[total44B_1],np.array(colors)[total45B_1],np.array(colors)[total46B_1],np.array(colors)[total47B_1],np.array(colors)[total48B_1]],
                    [np.array(colors)[total40B_2],np.array(colors)[total41B_2],np.array(colors)[total42B_2],np.array(colors)[total43B_2],np.array(colors)[total44B_2],np.array(colors)[total45B_2],np.array(colors)[total46B_2],np.array(colors)[total47B_2],np.array(colors)[total48B_2]],
                    [np.array(colors)[total40B_3],np.array(colors)[total41B_3],np.array(colors)[total42B_3],np.array(colors)[total43B_3],np.array(colors)[total44B_3],np.array(colors)[total45B_3],np.array(colors)[total46B_3],np.array(colors)[total47B_3],np.array(colors)[total48B_3]],
                    [np.array(colors)[total40B_4],np.array(colors)[total41B_4],np.array(colors)[total42B_4],np.array(colors)[total43B_4],np.array(colors)[total44B_4],np.array(colors)[total45B_4],np.array(colors)[total46B_4],np.array(colors)[total47B_4],np.array(colors)[total48B_4]],
                    [np.array(colors)[total20B_5],np.array(colors)[total21B_5],np.array(colors)[total22B_5],np.array(colors)[total23B_5],np.array(colors)[total24B_5],np.array(colors)[total25B_5],np.array(colors)[total26B_5],np.array(colors)[total27B_5],np.array(colors)[total28B_5]],
                    ['whitesmoke'],
                    [np.array(colors)[total40M_1],np.array(colors)[total41M_1],np.array(colors)[total42M_1],np.array(colors)[total43M_1],np.array(colors)[total44M_1],np.array(colors)[total45M_1],np.array(colors)[total46M_1],np.array(colors)[total47M_1],np.array(colors)[total48M_1]],
                    [np.array(colors)[total40M_2],np.array(colors)[total41M_2],np.array(colors)[total42M_2],np.array(colors)[total43M_2],np.array(colors)[total44M_2],np.array(colors)[total45M_2],np.array(colors)[total46M_2],np.array(colors)[total47M_2],np.array(colors)[total48M_2]],
                    [np.array(colors)[total40M_3],np.array(colors)[total41M_3],np.array(colors)[total42M_3],np.array(colors)[total43M_3],np.array(colors)[total44M_3],np.array(colors)[total45M_3],np.array(colors)[total46M_3],np.array(colors)[total47M_3],np.array(colors)[total48M_3]],
                    [np.array(colors)[total40M_4],np.array(colors)[total41M_4],np.array(colors)[total42M_4],np.array(colors)[total43M_4],np.array(colors)[total44M_4],np.array(colors)[total45M_4],np.array(colors)[total46M_4],np.array(colors)[total47M_4],np.array(colors)[total48M_4]],
                    [np.array(colors)[total20M_5],np.array(colors)[total21M_5],np.array(colors)[total22M_5],np.array(colors)[total23M_5],np.array(colors)[total24M_5],np.array(colors)[total25M_5],np.array(colors)[total26M_5],np.array(colors)[total27M_5],np.array(colors)[total28M_5]],
                    ],
            line_color=[
                    ['whitesmoke'],
                    [np.array(colors)[total40B_1],np.array(colors)[total41B_1],np.array(colors)[total42B_1],np.array(colors)[total43B_1],np.array(colors)[total44B_1],np.array(colors)[total45B_1],np.array(colors)[total46B_1],np.array(colors)[total47B_1],np.array(colors)[total48B_1]],
                    [np.array(colors)[total40B_2],np.array(colors)[total41B_2],np.array(colors)[total42B_2],np.array(colors)[total43B_2],np.array(colors)[total44B_2],np.array(colors)[total45B_2],np.array(colors)[total46B_2],np.array(colors)[total47B_2],np.array(colors)[total48B_2]],
                    [np.array(colors)[total40B_3],np.array(colors)[total41B_3],np.array(colors)[total42B_3],np.array(colors)[total43B_3],np.array(colors)[total44B_3],np.array(colors)[total45B_3],np.array(colors)[total46B_3],np.array(colors)[total47B_3],np.array(colors)[total48B_3]],
                    [np.array(colors)[total40B_4],np.array(colors)[total41B_4],np.array(colors)[total42B_4],np.array(colors)[total43B_4],np.array(colors)[total44B_4],np.array(colors)[total45B_4],np.array(colors)[total46B_4],np.array(colors)[total47B_4],np.array(colors)[total48B_4]],
                    [np.array(colors)[total20B_5],np.array(colors)[total21B_5],np.array(colors)[total22B_5],np.array(colors)[total23B_5],np.array(colors)[total24B_5],np.array(colors)[total25B_5],np.array(colors)[total26B_5],np.array(colors)[total27B_5],np.array(colors)[total28B_5]],
                    ['whitesmoke'],
                    [np.array(colors)[total40M_1],np.array(colors)[total41M_1],np.array(colors)[total42M_1],np.array(colors)[total43M_1],np.array(colors)[total44M_1],np.array(colors)[total45M_1],np.array(colors)[total46M_1],np.array(colors)[total47M_1],np.array(colors)[total48M_1]],
                    [np.array(colors)[total40M_2],np.array(colors)[total41M_2],np.array(colors)[total42M_2],np.array(colors)[total43M_2],np.array(colors)[total44M_2],np.array(colors)[total45M_2],np.array(colors)[total46M_2],np.array(colors)[total47M_2],np.array(colors)[total48M_2]],
                    [np.array(colors)[total40M_3],np.array(colors)[total41M_3],np.array(colors)[total42M_3],np.array(colors)[total43M_3],np.array(colors)[total44M_3],np.array(colors)[total45M_3],np.array(colors)[total46M_3],np.array(colors)[total47M_3],np.array(colors)[total48M_3]],
                    [np.array(colors)[total40M_4],np.array(colors)[total41M_4],np.array(colors)[total42M_4],np.array(colors)[total43M_4],np.array(colors)[total44M_4],np.array(colors)[total45M_4],np.array(colors)[total46M_4],np.array(colors)[total47M_4],np.array(colors)[total48M_4]],
                    [np.array(colors)[total20M_5],np.array(colors)[total21M_5],np.array(colors)[total22M_5],np.array(colors)[total23M_5],np.array(colors)[total24M_5],np.array(colors)[total25M_5],np.array(colors)[total26M_5],np.array(colors)[total27M_5],np.array(colors)[total28M_5]], 
                ],
            align='center',
            height=20,
            font=dict(size=10)
        ))
    ])
    
    fig.show()
    fig2.show()

def GetStat(home, guest):
    matches = 0 
    matchestotal = 0
    
    set4 = 0
    set5 = 0
    set4_2 = 0
    set5_2 = 0
    
    homewin = 0
    guestwin = 0
    set1homeWin = 0
    set2homeWin = 0
    set3homeWin = 0
    set4homeWin = 0
    set5homeWin = 0
    set1guestWin = 0
    set2guestWin = 0
    set3guestWin = 0
    set4guestWin = 0
    set5guestWin = 0
    
    total40B_1 = 0
    total41B_1 = 0
    total42B_1 = 0
    total43B_1 = 0
    total44B_1 = 0
    total45B_1 = 0
    total46B_1 = 0
    total47B_1 = 0
    total48B_1 = 0
    
    total40B_2 = 0
    total41B_2 = 0
    total42B_2 = 0
    total43B_2 = 0
    total44B_2 = 0
    total45B_2 = 0
    total46B_2 = 0
    total47B_2 = 0
    total48B_2 = 0

    total40B_3 = 0
    total41B_3 = 0
    total42B_3 = 0
    total43B_3 = 0
    total44B_3 = 0
    total45B_3 = 0
    total46B_3 = 0
    total47B_3 = 0
    total48B_3 = 0

    total40B_4 = 0
    total41B_4 = 0
    total42B_4 = 0
    total43B_4 = 0
    total44B_4 = 0
    total45B_4 = 0
    total46B_4 = 0
    total47B_4 = 0
    total48B_4 = 0
    
    total20B_5 = 0
    total21B_5 = 0
    total22B_5 = 0
    total23B_5 = 0
    total24B_5 = 0
    total25B_5 = 0
    total26B_5 = 0
    total27B_5 = 0
    total28B_5 = 0
    
    total40M_1 = 0
    total41M_1 = 0
    total42M_1 = 0
    total43M_1 = 0
    total44M_1 = 0
    total45M_1 = 0
    total46M_1 = 0
    total47M_1 = 0
    total48M_1 = 0
    
    total40M_2 = 0
    total41M_2 = 0
    total42M_2 = 0
    total43M_2 = 0
    total44M_2 = 0
    total45M_2 = 0
    total46M_2 = 0
    total47M_2 = 0
    total48M_2 = 0

    total40M_3 = 0
    total41M_3 = 0
    total42M_3 = 0
    total43M_3 = 0
    total44M_3 = 0
    total45M_3 = 0
    total46M_3 = 0
    total47M_3 = 0
    total48M_3 = 0

    total40M_4 = 0
    total41M_4 = 0
    total42M_4 = 0
    total43M_4 = 0
    total44M_4 = 0
    total45M_4 = 0
    total46M_4 = 0
    total47M_4 = 0
    total48M_4 = 0
    
    total20M_5 = 0
    total21M_5 = 0
    total22M_5 = 0
    total23M_5 = 0
    total24M_5 = 0
    total25M_5 = 0
    total26M_5 = 0
    total27M_5 = 0
    total28M_5 = 0
    
    
    
    vs1drop = volleystat[((volleystat.hometeam == home) & (volleystat.guestteam == guest)) | 
                         ((volleystat.hometeam == guest) & (volleystat.guestteam == home))].tail(50)
    vs1 = vs1drop.reset_index(drop=True)
    
    
    for i in range(len(vs1)):
        if ((vs1['hometeam'][i] == home) and (vs1['guestteam'][i] == guest) 
           or (vs1['hometeam'][i] == guest) and (vs1['guestteam'][i] == home)):
            matches += 1
            title = (f"{home}-{guest}: last {matches}")
        if (((vs1['hometeam'][i] == home) and (vs1['home_total'][i]) > (vs1['guest_total'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['home_total'][i]) < (vs1['guest_total'][i]))): 
            homewin += 1
        guestwin = matches - homewin
        if (((vs1['hometeam'][i] == home) and (vs1['1set_home'][i]) > (vs1['1set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['1set_home'][i]) < (vs1['1set_guest'][i]))): 
            set1homeWin += 1
        if (((vs1['hometeam'][i] == home) and (vs1['2set_home'][i]) > (vs1['2set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['2set_home'][i]) < (vs1['2set_guest'][i]))): 
            set2homeWin += 1
        if (((vs1['hometeam'][i] == home) and (vs1['3set_home'][i]) > (vs1['3set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['3set_home'][i]) < (vs1['3set_guest'][i]))): 
            set3homeWin += 1
        if (((vs1['hometeam'][i] == home) and (vs1['4set_home'][i]) > (vs1['4set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['4set_home'][i]) < (vs1['4set_guest'][i]))): 
            set4homeWin += 1
        if (vs1['4set_home'][i]) != 0: 
            set4 += 1
        if (((vs1['hometeam'][i] == home) and (vs1['5set_home'][i]) > (vs1['5set_guest'][i]))
            or ((vs1['guestteam'][i] == home) and (vs1['5set_home'][i]) < (vs1['5set_guest'][i]))): 
            set5homeWin += 1
        if (vs1['5set_home'][i]) != 0: 
            set5 += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['1set_home'][i]) > (vs1['1set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['1set_home'][i]) < (vs1['1set_guest'][i]))): 
            set1guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['2set_home'][i]) > (vs1['2set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['2set_home'][i]) < (vs1['2set_guest'][i]))): 
            set2guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['3set_home'][i]) > (vs1['3set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['3set_home'][i]) < (vs1['3set_guest'][i]))): 
            set3guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['4set_home'][i]) > (vs1['4set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['4set_home'][i]) < (vs1['4set_guest'][i]))): 
            set4guestWin += 1
        if (((vs1['hometeam'][i] == guest) and (vs1['5set_home'][i]) > (vs1['5set_guest'][i]))
            or ((vs1['guestteam'][i] == guest) and (vs1['5set_home'][i]) < (vs1['5set_guest'][i]))): 
            set5guestWin += 1
            
        
            
        vshome4set = vs1[(vs1['4set_home'] != 0)]
        vsguest4set = vs1[(vs1['4set_guest'] != 0)]
        vshome5set = vs1[(vs1['5set_home'] != 0)]
        vsguest5set = vs1[(vs1['5set_guest'] != 0)]
        vshome4set_g = vs1[(vs1['4set_home'] != 0)]
        vsguest4set_g = vs1[(vs1['4set_guest'] != 0)]
        vshome5set_g = vs1[(vs1['5set_home'] != 0)]
        vsguest5set_g = vs1[(vs1['5set_guest'] != 0)]
        
        vshome = vs1[((vs1.hometeam == home) | (volleystat.guestteam == home))]
        vshome = vshome.reset_index(drop=True)
        vsguest = vs1[((vs1.hometeam == guest) | (volleystat.guestteam == guest))]
        vsguest = vsguest.reset_index(drop=True)
        vshome1 = vshome.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set1=('1set_home', 'mean'),set2=('2set_home', 'mean'),set3=('3set_home', 'mean')).reset_index()
        vshome2 = vshome.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set1=('1set_guest', 'mean'),set2=('2set_guest', 'mean'),set3=('3set_guest', 'mean')).reset_index()
        vsguest1 = vsguest.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set1=('1set_home', 'mean'),set2=('2set_home', 'mean'),set3=('3set_home', 'mean')).reset_index()
        vsguest2 = vsguest.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set1=('1set_guest', 'mean'),set2=('2set_guest', 'mean'),set3=('3set_guest', 'mean')).reset_index()
        vshome4set = vshome4set.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set4=('4set_home', 'mean')).reset_index()
        vshome4set2 = vsguest4set.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set4=('4set_guest', 'mean')).reset_index()
        vshome5set = vshome5set.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set5=('5set_home', 'mean')).reset_index()
        vshome5set2 = vsguest5set.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set5=('5set_guest', 'mean')).reset_index()
        vsguest4set = vshome4set_g.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set4=('4set_home', 'mean')).reset_index()
        vsguest4set2 = vsguest4set_g.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set4=('4set_guest', 'mean')).reset_index()
        vsguest5set = vshome5set_g.groupby('hometeam').agg(mean_total=('home_total', 'mean'),set5=('5set_home', 'mean')).reset_index()
        vsguest5set2 = vsguest5set_g.groupby('guestteam').agg(mean_total=('guest_total', 'mean'),set5=('5set_guest', 'mean')).reset_index()
        
        vshome1 = vshome1[vshome1.hometeam == home]
        vshome2 = vshome2[vshome2.guestteam == home]
        vsguest1 = vsguest1[vsguest1.hometeam == guest]
        vsguest2 = vsguest2[vsguest2.guestteam == guest]
        vshome4set = vshome4set[vshome4set.hometeam == home]
        vshome4set2 = vshome4set2[vshome4set2.guestteam == home]
        vshome5set = vshome5set[vshome5set.hometeam == home]
        vshome5set2 = vshome5set2[vshome5set2.guestteam == home]
        vsguest4set = vshome4set[vshome4set.hometeam == guest]
        vsguest4set2 = vsguest4set2[vsguest4set2.guestteam == guest]
        vsguest5set = vshome5set[vshome5set.hometeam == guest]
        vsguest5set2 = vsguest5set2[vsguest5set2.guestteam == guest]
            
        vsconcathome = pd.concat([vshome1, vshome2])
        vsconcatguest = pd.concat([vsguest1, vsguest2])
        vsconcathome4set = pd.concat([vshome4set, vshome4set2])
        vsconcatguest4set = pd.concat([vsguest4set, vsguest4set2])
        vsconcathome5set = pd.concat([vshome5set, vshome5set2])
        vsconcatguest5set = pd.concat([vsguest5set, vsguest5set2])
            
        avgtotal = vs1["match_total"].mean().round(1)
        avgindhome = vsconcathome.mean_total.mean().round(1)
        avgindguest = vsconcatguest.mean_total.mean().round(1)
        avgind1sethome = vsconcathome.set1.mean().round(1)
        avgind2sethome = vsconcathome.set2.mean().round(1)
        avgind3sethome = vsconcathome.set3.mean().round(1)
        if vsconcathome4set.empty:
            avgind4sethome = 0
        else:
            avgind4sethome = vsconcathome4set.set4.mean().round(1)
        if vsconcathome5set.empty:
            avgind5sethome = 0
        else:
            avgind5sethome = vsconcathome5set.set5.mean().round(1)
        avgind1setguest = vsconcatguest.set1.mean().round(1)
        avgind2setguest = vsconcatguest.set2.mean().round(1)
        avgind3setguest = vsconcatguest.set3.mean().round(1)
        if vsconcatguest4set.empty:
            avgind4setguest = 0
        else:
            avgind4setguest = vsconcatguest4set.set4.mean().round(1)
        if vsconcatguest5set.empty:
            avgind5setguest = 0
        else:
            avgind5setguest = vsconcatguest5set.set5.mean().round(1)
        
        
        HomeWintext = (f"Побед хозяев/всего: {homewin}/{matches}")
        GuestWintext = (f"Побед гостей/всего: {guestwin}/{matches}")
        set1homeWintext = (f"Побед хозяев в 1 сете: {set1homeWin}")
        set2homeWintext = (f"Побед хозяев во 2 сете: {set2homeWin}")
        set3homeWintext = (f"Побед хозяев в 3 сете: {set3homeWin}")
        set4homeWintext = (f"Побед хозяев в 4 сете/всего: {set4homeWin}/{set4}")
        set5homeWintext = (f"Побед хозяев в 5 сете/всего: {set5homeWin}/{set5}")
        set1guestWintext = (f"Побед гостей в 1 сете: {set1guestWin}")
        set2guestWintext = (f"Побед гостей во 2 сете: {set2guestWin}")
        set3guestWintext = (f"Побед гостей в 3 сете: {set3guestWin}")
        set4guestWintext = (f"Побед гостей в 4 сете/всего: {set4guestWin}/{set4}")
        set5guestWintext = (f"Побед гостей в 5 сете/всего: {set5guestWin}/{set5}")
        averagetotal = (f"Средний тотал матчей: {avgtotal}")
        averageindtotalhome = (f"Средний ИТ хозяев: {vsconcathome.mean_total.mean().round(1)}")
        averageindtotalguest = (f"Средний ИТ гостей: {vsconcatguest.mean_total.mean().round(1)}")
        averageindhome1set = (f"Средний ИТ хозяев в 1 сете: {avgind1sethome}")
        averageindhome2set = (f"Средний ИТ хозяев в 2 сете: {avgind2sethome}")
        averageindhome3set = (f"Средний ИТ хозяев в 3 сете: {avgind3sethome}")
        averageindhome4set = (f"Средний ИТ хозяев в 4 сете: {avgind4sethome}")
        averageindhome5set = (f"Средний ИТ хозяев в 5 сете: {avgind5sethome}")
        averageindguest1set = (f"Средний ИТ гостей в 1 сете: {avgind1setguest}")
        averageindguest2set = (f"Средний ИТ гостей в 2 сете: {avgind2setguest}")
        averageindguest3set = (f"Средний ИТ гостей в 3 сете: {avgind3setguest}")
        averageindguest4set = (f"Средний ИТ гостей в 4 сете: {avgind4setguest}")
        averageindguest5set = (f"Средний ИТ гостей в 5 сете: {avgind5setguest}")
        
        if (vs1['1set_total'][i] > 40):
            total40B_1 += 1
        else:
            total40M_1 += 1
        total40B_1set = (f"{total40B_1}/{matches}")
        total40M_1set = (f"{total40M_1}/{matches}")
                        
        if (vs1['1set_total'][i] > 41):
            total41B_1 += 1 
        else:
            total41M_1 += 1
        total41M_1set = (f"{total41M_1}/{matches}")
        total41B_1set = (f"{total41B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 42):
            total42B_1 += 1
        else:
            total42M_1 += 1
        total42M_1set = (f"{total42M_1}/{matches}")
        total42B_1set = (f"{total42B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 43):
            total43B_1 += 1   
        else:
            total43M_1 += 1
        total43M_1set = (f"{total43M_1}/{matches}")
        total43B_1set = (f"{total43B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 44):
            total44B_1 += 1   
        else:
            total44M_1 += 1
        total44M_1set = (f"{total44M_1}/{matches}")
        total44B_1set = (f"{total44B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 45):
            total45B_1 += 1    
        else:
            total45M_1 += 1
        total45M_1set = (f"{total45M_1}/{matches}")
        total45B_1set = (f"{total45B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 46):
            total46B_1 += 1    
        else:
            total46M_1 += 1
        total46M_1set = (f"{total46M_1}/{matches}")
        total46B_1set = (f"{total46B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 47):
            total47B_1 += 1 
        else:
            total47M_1 += 1
        total47M_1set = (f"{total47M_1}/{matches}")
        total47B_1set = (f"{total47B_1}/{matches}") 
                
        if (vs1['1set_total'][i] > 48):
            total48B_1 += 1   
        else:
            total48M_1 += 1
        total48M_1set = (f"{total48M_1}/{matches}")
        total48B_1set = (f"{total48B_1}/{matches}") 
                
                
        if (vs1['2set_total'][i] > 40):
            total40B_2 += 1  
        else:
            total40M_2 += 1
        total40M_2set = (f"{total40M_2}/{matches}")
        total40B_2set = (f"{total40B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 41):
            total41B_2 += 1  
        else:
            total41M_2 += 1
        total41M_2set = (f"{total41M_2}/{matches}")
        total41B_2set = (f"{total41B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 42):
            total42B_2 += 1  
        else:
            total42M_2 += 1
        total42M_2set = (f"{total42M_2}/{matches}")
        total42B_2set = (f"{total42B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 43):
            total43B_2 += 1    
        else:
            total43M_2 += 1
        total43M_2set = (f"{total43M_2}/{matches}")
        total43B_2set = (f"{total43B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 44):
            total44B_2 += 1  
        else:
            total44M_2 += 1
        total44M_2set = (f"{total44M_2}/{matches}")
        total44B_2set = (f"{total44B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 45):
            total45B_2 += 1  
        else:
            total45M_2 += 1
        total45M_2set = (f"{total45M_2}/{matches}")
        total45B_2set = (f"{total45B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 46):
            total46B_2 += 1    
        else:
            total46M_2 += 1
        total46M_2set = (f"{total46M_2}/{matches}")
        total46B_2set = (f"{total46B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 47):
            total47B_2 += 1    
        else:
            total47M_2 += 1
        total47M_2set = (f"{total47M_2}/{matches}")
        total47B_2set = (f"{total47B_2}/{matches}") 
                
        if (vs1['2set_total'][i] > 48):
            total48B_2 += 1  
        else:
            total48M_2 += 1
        total48M_2set = (f"{total48M_2}/{matches}")
        total48B_2set = (f"{total48B_2}/{matches}") 
                
                
        if (vs1['3set_total'][i] > 40):
            total40B_3 += 1   
        else:
            total40M_3 += 1
        total40M_3set = (f"{total40M_3}/{matches}")
        total40B_3set = (f"{total40B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 41):
            total41B_3 += 1 
        else:
            total41M_3 += 1
        total41M_3set = (f"{total41M_3}/{matches}")
        total41B_3set = (f"{total41B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 42):
            total42B_3 += 1   
        else:
            total42M_3 += 1
        total42M_3set = (f"{total42M_3}/{matches}")
        total42B_3set = (f"{total42B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 43):
            total43B_3 += 1    
        else:
            total43M_3 += 1
        total43M_3set = (f"{total43M_3}/{matches}")
        total43B_3set = (f"{total43B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 44):
            total44B_3 += 1   
        else:
            total44M_3 += 1
        total44M_3set = (f"{total44M_3}/{matches}")
        total44B_3set = (f"{total44B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 45):
            total45B_3 += 1  
        else:
            total45M_3 += 1
        total45M_3set = (f"{total45M_3}/{matches}")
        total45B_3set = (f"{total45B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 46):
            total46B_3 += 1   
        else:
            total46M_3 += 1
        total46M_3set = (f"{total46M_3}/{matches}")
        total46B_3set = (f"{total46B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 47):
            total47B_3 += 1   
        else:
            total47M_3 += 1
        total47M_3set = (f"{total47M_3}/{matches}")
        total47B_3set = (f"{total47B_3}/{matches}") 
                
        if (vs1['3set_total'][i] > 48):
            total48B_3 += 1   
        else:
            total48M_3 += 1
        total48M_3set = (f"{total48M_3}/{matches}")
        total48B_3set = (f"{total48B_3}/{matches}") 
                
        if (vs1['4set_total'][i] > 40):
            total40B_4 += 1  
        if (0 < vs1['4set_total'][i] < 40):
            total40M_4 += 1
        total40M_4set = (f"{total40M_4}/{set4}")
        total40B_4set = (f"{total40B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 41):
            total41B_4 += 1  
        if (0 < vs1['4set_total'][i] < 41):
            total41M_4 += 1
        total41M_4set = (f"{total41M_4}/{set4}")
        total41B_4set = (f"{total41B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 42):
            total42B_4 += 1  
        if (0 < vs1['4set_total'][i] < 42):
            total42M_4 += 1
        total42M_4set = (f"{total42M_4}/{set4}")    
        total42B_4set = (f"{total42B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 43):
            total43B_4 += 1   
        if (0 < vs1['4set_total'][i] < 43):
            total43M_4 += 1
        total43M_4set = (f"{total43M_4}/{set4}")
        total43B_4set = (f"{total43B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 44):
            total44B_4 += 1   
        if (0 < vs1['4set_total'][i] < 44):
            total44M_4 += 1
        total44M_4set = (f"{total44M_4}/{set4}")
        total44B_4set = (f"{total44B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 45):
            total45B_4 += 1  
        if (0 < vs1['4set_total'][i] < 45):
            total45M_4 += 1
        total45M_4set = (f"{total45M_4}/{set4}")
        total45B_4set = (f"{total45B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 46):
            total46B_4 += 1    
        if (0 < vs1['4set_total'][i] < 46):
            total46M_4 += 1
        total46M_4set = (f"{total46M_4}/{set4}")
        total46B_4set = (f"{total46B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 47):
            total47B_4 += 1  
        if (0 < vs1['4set_total'][i] < 47):
            total47M_4 += 1
        total47M_4set = (f"{total47M_4}/{set4}")
        total47B_4set = (f"{total47B_4}/{set4}") 
                
        if (vs1['4set_total'][i] > 48):
            total48B_4 += 1  
        if (0 < vs1['4set_total'][i] < 48):
            total48M_4 += 1
        total48M_4set = (f"{total48M_4}/{set4}")
        total48B_4set = (f"{total48B_4}/{set4}") 
                
        if (vs1['5set_total'][i] > 20):
            total20B_5 += 1  
        if (0 < vs1['5set_total'][i] < 20):
            total20M_5 += 1 
        total20M_5set = (f"{total20M_5}/{set5}")
        total20B_5set = (f"{total20B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 21):
            total21B_5 += 1  
        if (0 < vs1['5set_total'][i] < 21):
            total21M_5 += 1 
        total21M_5set = (f"{total21M_5}/{set5}")
        total21B_5set = (f"{total21B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 22):
            total22B_5 += 1  
        if (0 < vs1['5set_total'][i] < 22):
            total22M_5 += 1 
        total22M_5set = (f"{total22M_5}/{set5}")
        total22B_5set = (f"{total22B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 23):
            total23B_5 += 1    
        if (0 < vs1['5set_total'][i] < 23):
            total23M_5 += 1 
        total23M_5set = (f"{total23M_5}/{set5}")
        total23B_5set = (f"{total23B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 24):
            total24B_5 += 1    
        if (0 < vs1['5set_total'][i] < 24):
            total24M_5 += 1 
        total24M_5set = (f"{total24M_5}/{set5}")
        total24B_5set = (f"{total24B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 25):
            total25B_5 += 1    
        if (0 < vs1['5set_total'][i] < 25):
            total25M_5 += 1 
        total25M_5set = (f"{total25M_5}/{set5}")
        total25B_5set = (f"{total25B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 26):
            total26B_5 += 1   
        if (0 < vs1['5set_total'][i] < 26):
            total26M_5 += 1 
        total26M_5set = (f"{total26M_5}/{set5}")
        total26B_5set = (f"{total26B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 27):
            total27B_5 += 1  
        if (0 < vs1['5set_total'][i] < 27):
            total27M_5 += 1  
        total27M_5set = (f"{total27M_5}/{set5}")
        total27B_5set = (f"{total27B_5}/{set5}") 
                
        if (vs1['5set_total'][i] > 28):
            total28B_5 += 1  
        if (0 < vs1['5set_total'][i] < 28):
            total28M_5 += 1  
        total28M_5set = (f"{total28M_5}/{set5}")
        total28B_5set = (f"{total28B_5}/{set5}")         
    
    fig = go.Figure(data=[go.Table(
        columnwidth = [30,10,25,35],
        header=dict(
            values=[title,'Дата','Команды','Счет'],
            line_color='whitesmoke',
            fill_color='whitesmoke',
            align=['left','left','left'],
            height=25,
            font=dict(size=12)),
        cells=dict(
            values=[[HomeWintext,GuestWintext,set1homeWintext,set2homeWintext,set3homeWintext,set4homeWintext,set5homeWintext,
                     set1guestWintext,set2guestWintext,set3guestWintext,set4guestWintext,set5guestWintext,
                     averagetotal,averageindtotalhome,averageindtotalguest,averageindhome1set,averageindhome2set,
                     averageindhome3set,averageindhome4set,averageindhome5set,averageindguest1set,averageindguest2set,
                     averageindguest3set,averageindguest4set,averageindguest5set],
                    vs1.start_dt,vs1.events_command,vs1.events_score],
            fill_color='white',
            line_color='whitesmoke',
            align=['left','left','left'],
            height=20,
            font=dict(size=10)
        ))
    ])
    
    colors = n_colors('rgb(255, 255, 255)', 'rgb(152, 192, 121)', 50, colortype='rgb')
    
    fig2 = go.Figure(data=[go.Table(
        #columnwidth = [50,50],
        header=dict(
            values=['','1 СЕТ','2 СЕТ','3 СЕТ','4 СЕТ','5 СЕТ','','1 СЕТ','2 СЕТ','3 СЕТ','4 СЕТ','5 СЕТ'],
            line_color='whitesmoke',
            fill_color='whitesmoke',
            font=dict(size=10)),
        cells=dict(
            values=[['<b>ТБ40,5<b>','<b>ТБ41,5<b>','<b>ТБ42,5<b>','<b>ТБ43,5<b>','<b>ТБ44,5<b>','<b>ТБ45,5<b>','<b>ТБ46,5<b>','<b>ТБ47,5<b>','<b>ТБ48,5<b>'],
                    [total40B_1set, total41B_1set, total42B_1set, total43B_1set, total44B_1set, total45B_1set, total46B_1set, total47B_1set, total48B_1set],
                    [total40B_2set, total41B_2set, total42B_2set, total43B_2set, total44B_2set, total45B_2set, total46B_2set, total47B_2set, total48B_2set],
                    [total40B_3set, total41B_3set, total42B_3set, total43B_3set, total44B_3set, total45B_3set, total46B_3set, total47B_3set, total48B_3set],
                    [total40B_4set, total41B_4set, total42B_4set, total43B_4set, total44B_4set, total45B_4set, total46B_4set, total47B_4set, total48B_4set],
                    [total20B_5set, total21B_5set, total22B_5set, total23B_5set, total24B_5set, total25B_5set, total26B_5set, total27B_5set, total28B_5set],
                    ['<b>ТМ40,5<b>','<b>ТМ41,5<b>','<b>ТМ42,5<b>','<b>ТМ43,5<b>','<b>ТМ44,5<b>','<b>ТМ45,5<b>','<b>ТМ46,5<b>','<b>ТМ47,5<b>','<b>ТМ48,5<b>'],
                    [total40M_1set, total41M_1set, total42M_1set, total43M_1set, total44M_1set, total45M_1set, total46M_1set, total47M_1set, total48M_1set],
                    [total40M_2set, total41M_2set, total42M_2set, total43M_2set, total44M_2set, total45M_2set, total46M_2set, total47M_2set, total48M_2set],
                    [total40M_3set, total41M_3set, total42M_3set, total43M_3set, total44M_3set, total45M_3set, total46M_3set, total47M_3set, total48M_3set],
                    [total40M_4set, total41M_4set, total42M_4set, total43M_4set, total44M_4set, total45M_4set, total46M_4set, total47M_4set, total48M_4set],
                    [total20M_5set, total21M_5set, total22M_5set, total23M_5set, total24M_5set, total25M_5set, total26M_5set, total27M_5set, total28M_5set]],
            fill_color=[
                    ['whitesmoke'],
                    [np.array(colors)[total40B_1],np.array(colors)[total41B_1],np.array(colors)[total42B_1],np.array(colors)[total43B_1],np.array(colors)[total44B_1],np.array(colors)[total45B_1],np.array(colors)[total46B_1],np.array(colors)[total47B_1],np.array(colors)[total48B_1]],
                    [np.array(colors)[total40B_2],np.array(colors)[total41B_2],np.array(colors)[total42B_2],np.array(colors)[total43B_2],np.array(colors)[total44B_2],np.array(colors)[total45B_2],np.array(colors)[total46B_2],np.array(colors)[total47B_2],np.array(colors)[total48B_2]],
                    [np.array(colors)[total40B_3],np.array(colors)[total41B_3],np.array(colors)[total42B_3],np.array(colors)[total43B_3],np.array(colors)[total44B_3],np.array(colors)[total45B_3],np.array(colors)[total46B_3],np.array(colors)[total47B_3],np.array(colors)[total48B_3]],
                    [np.array(colors)[total40B_4],np.array(colors)[total41B_4],np.array(colors)[total42B_4],np.array(colors)[total43B_4],np.array(colors)[total44B_4],np.array(colors)[total45B_4],np.array(colors)[total46B_4],np.array(colors)[total47B_4],np.array(colors)[total48B_4]],
                    [np.array(colors)[total20B_5],np.array(colors)[total21B_5],np.array(colors)[total22B_5],np.array(colors)[total23B_5],np.array(colors)[total24B_5],np.array(colors)[total25B_5],np.array(colors)[total26B_5],np.array(colors)[total27B_5],np.array(colors)[total28B_5]],
                    ['whitesmoke'],
                    [np.array(colors)[total40M_1],np.array(colors)[total41M_1],np.array(colors)[total42M_1],np.array(colors)[total43M_1],np.array(colors)[total44M_1],np.array(colors)[total45M_1],np.array(colors)[total46M_1],np.array(colors)[total47M_1],np.array(colors)[total48M_1]],
                    [np.array(colors)[total40M_2],np.array(colors)[total41M_2],np.array(colors)[total42M_2],np.array(colors)[total43M_2],np.array(colors)[total44M_2],np.array(colors)[total45M_2],np.array(colors)[total46M_2],np.array(colors)[total47M_2],np.array(colors)[total48M_2]],
                    [np.array(colors)[total40M_3],np.array(colors)[total41M_3],np.array(colors)[total42M_3],np.array(colors)[total43M_3],np.array(colors)[total44M_3],np.array(colors)[total45M_3],np.array(colors)[total46M_3],np.array(colors)[total47M_3],np.array(colors)[total48M_3]],
                    [np.array(colors)[total40M_4],np.array(colors)[total41M_4],np.array(colors)[total42M_4],np.array(colors)[total43M_4],np.array(colors)[total44M_4],np.array(colors)[total45M_4],np.array(colors)[total46M_4],np.array(colors)[total47M_4],np.array(colors)[total48M_4]],
                    [np.array(colors)[total20M_5],np.array(colors)[total21M_5],np.array(colors)[total22M_5],np.array(colors)[total23M_5],np.array(colors)[total24M_5],np.array(colors)[total25M_5],np.array(colors)[total26M_5],np.array(colors)[total27M_5],np.array(colors)[total28M_5]],
                    ],
            line_color=[
                    ['whitesmoke'],
                    [np.array(colors)[total40B_1],np.array(colors)[total41B_1],np.array(colors)[total42B_1],np.array(colors)[total43B_1],np.array(colors)[total44B_1],np.array(colors)[total45B_1],np.array(colors)[total46B_1],np.array(colors)[total47B_1],np.array(colors)[total48B_1]],
                    [np.array(colors)[total40B_2],np.array(colors)[total41B_2],np.array(colors)[total42B_2],np.array(colors)[total43B_2],np.array(colors)[total44B_2],np.array(colors)[total45B_2],np.array(colors)[total46B_2],np.array(colors)[total47B_2],np.array(colors)[total48B_2]],
                    [np.array(colors)[total40B_3],np.array(colors)[total41B_3],np.array(colors)[total42B_3],np.array(colors)[total43B_3],np.array(colors)[total44B_3],np.array(colors)[total45B_3],np.array(colors)[total46B_3],np.array(colors)[total47B_3],np.array(colors)[total48B_3]],
                    [np.array(colors)[total40B_4],np.array(colors)[total41B_4],np.array(colors)[total42B_4],np.array(colors)[total43B_4],np.array(colors)[total44B_4],np.array(colors)[total45B_4],np.array(colors)[total46B_4],np.array(colors)[total47B_4],np.array(colors)[total48B_4]],
                    [np.array(colors)[total20B_5],np.array(colors)[total21B_5],np.array(colors)[total22B_5],np.array(colors)[total23B_5],np.array(colors)[total24B_5],np.array(colors)[total25B_5],np.array(colors)[total26B_5],np.array(colors)[total27B_5],np.array(colors)[total28B_5]],
                    ['whitesmoke'],
                    [np.array(colors)[total40M_1],np.array(colors)[total41M_1],np.array(colors)[total42M_1],np.array(colors)[total43M_1],np.array(colors)[total44M_1],np.array(colors)[total45M_1],np.array(colors)[total46M_1],np.array(colors)[total47M_1],np.array(colors)[total48M_1]],
                    [np.array(colors)[total40M_2],np.array(colors)[total41M_2],np.array(colors)[total42M_2],np.array(colors)[total43M_2],np.array(colors)[total44M_2],np.array(colors)[total45M_2],np.array(colors)[total46M_2],np.array(colors)[total47M_2],np.array(colors)[total48M_2]],
                    [np.array(colors)[total40M_3],np.array(colors)[total41M_3],np.array(colors)[total42M_3],np.array(colors)[total43M_3],np.array(colors)[total44M_3],np.array(colors)[total45M_3],np.array(colors)[total46M_3],np.array(colors)[total47M_3],np.array(colors)[total48M_3]],
                    [np.array(colors)[total40M_4],np.array(colors)[total41M_4],np.array(colors)[total42M_4],np.array(colors)[total43M_4],np.array(colors)[total44M_4],np.array(colors)[total45M_4],np.array(colors)[total46M_4],np.array(colors)[total47M_4],np.array(colors)[total48M_4]],
                    [np.array(colors)[total20M_5],np.array(colors)[total21M_5],np.array(colors)[total22M_5],np.array(colors)[total23M_5],np.array(colors)[total24M_5],np.array(colors)[total25M_5],np.array(colors)[total26M_5],np.array(colors)[total27M_5],np.array(colors)[total28M_5]], 
                ],
            align='center',
            height=20,
            font=dict(size=10)
        ))
    ])
    
    fig.show()
    fig2.show()
    

    
def GetStatFin (home, guest):
    GetStatHome (home, guest)
    GetStatGuest (home, guest)
    GetStat (home, guest)
